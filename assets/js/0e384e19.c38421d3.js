(self.webpackChunkprofiles_dev=self.webpackChunkprofiles_dev||[]).push([[671],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return c},kt:function(){return d}});var o=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},r=Object.keys(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=o.createContext({}),p=function(e){var t=o.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),h=p(a),d=n,m=h["".concat(s,".").concat(d)]||h[d]||u[d]||r;return a?o.createElement(m,i(i({ref:t},c),{},{components:a})):o.createElement(m,i({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,i=new Array(r);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var p=2;p<r;p++)i[p]=a[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,a)}h.displayName="MDXCreateElement"},426:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return h}});var o=a(2122),n=a(9756),r=(a(7294),a(3905)),i=["components"],l={sidebar_position:1},s="Introduction",p={unversionedId:"intro",id:"intro",isDocsHomePage:!1,title:"Introduction",description:"Welcome to Profilessparkles:",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",editUrl:"https://github.com/weaveworks/profiles/edit/main/userdocs/profiles.dev/docs/intro.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Environment setup",permalink:"/docs/tutorial-basics/setup"}},c=[{value:"What are Profiles?",id:"what-are-profiles",children:[]},{value:"Core concepts &amp; Terminology",id:"core-concepts--terminology",children:[{value:"GitOps",id:"gitops",children:[]},{value:"Profile",id:"profile",children:[]},{value:"pctl",id:"pctl",children:[]},{value:"GitOps Repository",id:"gitops-repository",children:[]},{value:"Install",id:"install",children:[]},{value:"Catalog",id:"catalog",children:[]},{value:"Profile Catalog Source",id:"profile-catalog-source",children:[]},{value:"Profile Catalog Source Controller",id:"profile-catalog-source-controller",children:[]}]}],u={toc:c};function h(e){var t=e.components,a=(0,n.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Welcome to Profiles: ",(0,r.kt)("em",{parentName:"p"},"The")," GitOps Native Package Manager \u2728"),(0,r.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),(0,r.kt)("em",{parentName:"h5"},"(highway to the)")," Danger Zone")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Profiles is still highly experimental and likely to experience sudden and significant\nAPI change as we continue to develop based on incoming feedback."),(0,r.kt)("p",{parentName:"div"},"Please always refer to the docs and release notes, and alert us to any issues\nor inconsistencies."),(0,r.kt)("p",{parentName:"div"},"Thank you!"))),(0,r.kt)("h2",{id:"what-are-profiles"},"What are Profiles?"),(0,r.kt)("p",null,"In short, a profile is a Kubernetes package. Much as you would expect from another package\nmanager (",(0,r.kt)("inlineCode",{parentName:"p"},"brew"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"apt"),", etc), the Profiles mechanism allows Kubernetes operators\nto manage their clusters in the same way they manage their host systems. Available\npackages are listed somewhere searchable; they are versioned; they are tested and verified;\nthey are installable by way of a simple command; they are updatable and upgradable.\nMoreover they are reliable and uniformly manageable through a simple intuitive cli tool."),(0,r.kt)("p",null,"Sticking with the ",(0,r.kt)("inlineCode",{parentName:"p"},"apt")," analogy, let's look at one of the most basic and ubiquitous\npackages: ",(0,r.kt)("inlineCode",{parentName:"p"},"coreutils"),". By installing ",(0,r.kt)("inlineCode",{parentName:"p"},"coreutils"),", users understand that they are\ninstalling a bulk set of the most commonly used and useful tools on their unix system.\nThey don't care much what the full roster is, just that their system is now more operable\nthan it was before; that the various pieces work; that the whole thing can be updated\nor removed just as simply."),(0,r.kt)("p",null,'Profiles provides the same service for cluster operators. On spinning up a new cluster or\nfleet of clusters, operators can then apply an approved set of profiles to get things\nto a uniform, operable standard. They could choose to install, say, a standard Observability\npackage, maybe a Logging set too. If they have some in-house collections, they are able to create\ntheir own custom profiles to bundle these up, and apply them across their infrastructure.\nThey even have the option of creating a single "install all the things" profile to bring\ntheir most commonly used collections under one reliable and reusable package, giving them just one\nthing to do to bootstrap a new cluster to their org specifications.'),(0,r.kt)("p",null,"Profiles is designed from its core to follow the best practices\nof GitOps, that is; managing infrastructure as code. Profiles therefore uses ",(0,r.kt)("a",{parentName:"p",href:"https://fluxcd.io/"},"Flux"),"\nto fit into users' existing cluster management practices."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),'Heard the word "profiles" too much?')),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"No worries, here's the breakdown:"),(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},'A profile: an individual package of Kubernetes components. Lives in a git repo "upstream"\nof users who have installed it on their cluster'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"N")," profiles: more than one profile"),(0,r.kt)("li",{parentName:"ul"},"Profiles (capital 'P'): a blanket term for this concept of GitOps native package management"),(0,r.kt)("li",{parentName:"ul"},"Pctl: the CLI tool. Use this to install and manage profiles on your cluster")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"core-concepts--terminology"},"Core concepts & Terminology"),(0,r.kt)("h3",{id:"gitops"},"GitOps"),(0,r.kt)("p",null,"GitOps is a way of managing your infrastructure and applications so that the whole\nsystem is described declaratively and version controlled (most likely in a Git repository),\nand having an automated process that ensures that the deployed environment matches the state specified in a repository."),(0,r.kt)("p",null,"For more information, take a look at ",(0,r.kt)("a",{parentName:"p",href:"https://www.gitops.tech/#what-is-gitops"},'\u201cWhat is GitOps?"'),"."),(0,r.kt)("p",null,"The GitOps tool leveraged by Profiles is Flux. Please refer to ",(0,r.kt)("a",{parentName:"p",href:"https://fluxcd.io/"},"their documentation")," for more\ninformation."),(0,r.kt)("h3",{id:"profile"},"Profile"),(0,r.kt)("p",null,'A Profile is a "package" of Kubernetes deployable objects, known as Artifacts, along with any configurable values.\nAn artifact can be one of:'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Helm Chart;"),(0,r.kt)("li",{parentName:"ul"},"Raw Kubernetes yaml"),(0,r.kt)("li",{parentName:"ul"},"Kustomize patch"),(0,r.kt)("li",{parentName:"ul"},"Another nested Profile")),(0,r.kt)("p",null,"See the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/weaveworks/profiles-examples"},"example repo")," for a full collection of working\nprofile artifact types."),(0,r.kt)("h3",{id:"pctl"},"pctl"),(0,r.kt)("p",null,"The Profiles CLI."),(0,r.kt)("p",null,"###\xa0Profile Repository"),(0,r.kt)("p",null,"A profile repository holds the definition and other necessary items for an upstream profile\nor profiles. A single repository can hold multiple profiles, separated by directories."),(0,r.kt)("h3",{id:"gitops-repository"},"GitOps Repository"),(0,r.kt)("p",null,"A GitOps repository is one which is synced to your cluster via Flux. The manifests of all\ncomponents applied to your cluster should be managed through this repo."),(0,r.kt)("p",null,"When installing profiles, the generated manifests will be saved to this repo."),(0,r.kt)("p",null,"Refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://fluxcd.io/"},"Flux documentation")," for more detail on how to work with Flux."),(0,r.kt)("h3",{id:"install"},"Install"),(0,r.kt)("p",null,"To install a Profile means to generate the required component manifests for a Profile and commit\nthem to a GitOps repo. From there, Flux will recognise the changes and apply the manifests."),(0,r.kt)("p",null,"For more information, see the ",(0,r.kt)("a",{parentName:"p",href:"/docs/installer-docs/simple-install"},"Installer documentation"),"."),(0,r.kt)("h3",{id:"catalog"},"Catalog"),(0,r.kt)("p",null,"A Catalog is an in-cluster cache of Profile references. The mechanism allows cluster admins to define\na list of profiles which may be applied to a cluster, and also provides users with another\nmethod of installation."),(0,r.kt)("p",null,"Users can also see when newer versions of profiles are published, as well as query the cache\nfor more profiles which may meet their needs."),(0,r.kt)("p",null,"There is one Catalog per running ",(0,r.kt)("a",{parentName:"p",href:"#profile-controller"},"Profile Catalog Source Controller"),".\nThe Catalog is queryable via ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/weaveworks/pctl"},"pctl"),"."),(0,r.kt)("p",null,"Profiles can be added to the Catalog by creating a ",(0,r.kt)("a",{parentName:"p",href:"#profile-catalog-source"},(0,r.kt)("inlineCode",{parentName:"a"},"ProfileCatalogSource")),"."),(0,r.kt)("h3",{id:"profile-catalog-source"},"Profile Catalog Source"),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileCatalogSource")," is a custom resource through which approved profiles can be managed in the ",(0,r.kt)("a",{parentName:"p",href:"#catalog"},"Catalog"),"."),(0,r.kt)("h3",{id:"profile-catalog-source-controller"},"Profile Catalog Source Controller"),(0,r.kt)("p",null,"The Profile Catalog Source Controller reconciles ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileCatalogSource")," resources.\nSee architecture diagrams below for what the reconciliation process does."))}h.isMDXComponent=!0}}]);