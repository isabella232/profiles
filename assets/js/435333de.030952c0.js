(self.webpackChunkprofiles_dev=self.webpackChunkprofiles_dev||[]).push([[1993],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(r),d=o,m=s["".concat(c,".").concat(d)]||s[d]||f[d]||a;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=s;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},4526:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return u},default:function(){return s}});var n=r(2122),o=r(9756),a=(r(7294),r(3905)),i=["components"],l={},c="add",p={unversionedId:"pctl/pctl-add-cmd",id:"pctl/pctl-add-cmd",isDocsHomePage:!1,title:"add",description:"`",source:"@site/docs/pctl/pctl-add-cmd.md",sourceDirName:"pctl",slug:"/pctl/pctl-add-cmd",permalink:"/docs/pctl/pctl-add-cmd",editUrl:"https://github.com/weaveworks/profiles/edit/main/userdocs/profiles.dev/docs/pctl/pctl-add-cmd.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Catalog source schema",permalink:"/docs/catalog-docs/catalog-source-schema"},next:{title:"bootstrap",permalink:"/docs/pctl/pctl-bootstrap-cmd"}},u=[],f={toc:u};function s(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"add"},"add"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"NAME:\n   pctl add - generate a profile installation\n\nUSAGE:\n   To add from a profile catalog entry: pctl --catalog-url <URL> add --name pctl-profile --namespace default --profile-branch main --config-map configmap-name <CATALOG>/<PROFILE>[/<VERSION>]\n   To add directly from a profile repository: pctl add --name pctl-profile --namespace default --profile-branch development --profile-repo-url https://github.com/weaveworks/profiles-examples --profile-path bitnami-nginx\n\nOPTIONS:\n   --create-pr                   If given, upgrade will create a PR for the modifications it outputs. (default: false)\n   --pr-message value, -m value  The message to use for committing. (default: Push changes to remote)\n   --pr-remote value             The remote to push the branch to. (default: origin)\n   --pr-base value               The base branch to open a PR against. (default: main)\n   --pr-branch value             The branch to create the PR from. Generated if not set.\n   --pr-repo value               The repository to open a pr against. Format is: org/repo-name.\n   --name value                  The name of the installation. (default: pctl-profile)\n   --namespace value             The namespace to use for generating resources. (default: default)\n   --profile-branch value        The branch to use on the repository in which the profile is. (default: main)\n   --config-map value            The name of the ConfigMap which contains values for this profile.\n   --out value                   Optional location to create the profile installation folder in. This should be relative to the current working directory. (default: current)\n   --profile-repo-url value      Optional value defining the URL of the repository that contains the profile to be added.\n   --profile-path value          Value defining the path to a profile when url is provided. (default: <root>)\n   --git-repository value        The namespace and name of the GitRepository object governing the flux repo.\n   \n")))}s.isMDXComponent=!0}}]);