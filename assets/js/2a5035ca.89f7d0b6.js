(self.webpackChunkprofiles_dev=self.webpackChunkprofiles_dev||[]).push([[8324],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var a=r.createContext({}),s=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(a.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,a=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=s(n),d=o,m=f["".concat(a,".").concat(d)]||f[d]||u[d]||l;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,i=new Array(l);i[0]=f;var c={};for(var a in t)hasOwnProperty.call(t,a)&&(c[a]=t[a]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<l;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3200:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return a},metadata:function(){return s},toc:function(){return p},default:function(){return f}});var r=n(2122),o=n(9756),l=(n(7294),n(3905)),i=["components"],c={},a="install",s={unversionedId:"pctl/pctl-install-cmd",id:"pctl/pctl-install-cmd",isDocsHomePage:!1,title:"install",description:"`",source:"@site/docs/pctl/pctl-install-cmd.md",sourceDirName:"pctl",slug:"/pctl/pctl-install-cmd",permalink:"/docs/pctl/pctl-install-cmd",editUrl:"https://github.com/weaveworks/profiles/edit/main/userdocs/profiles.dev/docs/pctl/pctl-install-cmd.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"get",permalink:"/docs/pctl/pctl-get-cmd"},next:{title:"upgrade",permalink:"/docs/pctl/pctl-upgrade-cmd"}},p=[],u={toc:p};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"install"},"install"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"NAME:\n   pctl install - install the profile controllers and custom resource definitions\n\nUSAGE:\n   pctl install\n\nOPTIONS:\n   --dry-run                  If defined, nothing will be applied. (default: false)\n   --keep                     Keep the downloaded manifest files. (default: false)\n   --ignore-preflight-errors  Instead of stopping the process, output warnings when they occur during preflight check. (default: false)\n   --version value            Define the tagged version to use which can be found under releases in the profiles repository. Exp: [v]0.0.1\n   --baseurl value            Define the url to go and fetch releases from. (default: https://github.com/weaveworks/profiles/releases)\n   --flux-namespace value     Define the namespace in which flux is installed. (default: flux-system)\n   --out value                Specify the output location of the downloaded installation file. (default: os.Temp)\n   --context value            The Kubernetes context to use to apply the manifest files .\n   \n")))}f.isMDXComponent=!0}}]);