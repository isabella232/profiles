(self.webpackChunkprofiles_dev=self.webpackChunkprofiles_dev||[]).push([[3836],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=p(n),f=a,m=u["".concat(s,".").concat(f)]||u[f]||l[f]||i;return n?r.createElement(m,o(o({ref:t},d),{},{components:n})):r.createElement(m,o({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5489:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return d},default:function(){return u}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o=["components"],c={sidebar_position:7},s="Dependencies between artifacts",p={unversionedId:"author-docs/dependencies",id:"author-docs/dependencies",isDocsHomePage:!1,title:"Dependencies between artifacts",description:"It's possible to add dependencies between artifacts. Consider the following scenario:",source:"@site/docs/author-docs/dependencies.md",sourceDirName:"author-docs",slug:"/author-docs/dependencies",permalink:"/docs/author-docs/dependencies",editUrl:"https://github.com/weaveworks/profiles/edit/main/userdocs/profiles.dev/docs/author-docs/dependencies.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Default artifact values",permalink:"/docs/author-docs/default-values"},next:{title:"Profile Definition schema",permalink:"/docs/author-docs/profile-definition-schema"}},d=[],l={toc:d};function u(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"dependencies-between-artifacts"},"Dependencies between artifacts"),(0,i.kt)("p",null,"It's possible to add dependencies between artifacts. Consider the following scenario:"),(0,i.kt)("p",null,"There is an artifact (",(0,i.kt)("inlineCode",{parentName:"p"},"artifact B"),") which needs a certain set of CRDs to be present on the cluster before it can be installed.\nIn that case, ",(0,i.kt)("inlineCode",{parentName:"p"},"artifact B")," can depend on ",(0,i.kt)("inlineCode",{parentName:"p"},"artifact A")," which installs the necessary CRDs before ",(0,i.kt)("inlineCode",{parentName:"p"},"artifact B"),"."),(0,i.kt)("p",null,"This is achieved by adding a ",(0,i.kt)("inlineCode",{parentName:"p"},"dependsOn")," setting on the desired artifact's configuration."),(0,i.kt)("p",null,"Such as:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'spec:\n  description: Depending artifacts\n  artifacts:\n    - name: artifact-a\n      kustomize:\n        path: crds/rbacs\n    - name: artifact-b\n      chart:\n        url: https://charts.bitnami.com/bitnami\n        name: nginx\n        version: "9.3.0"\n        defaultValues: |\n          service:\n            type: ClusterIP\n      dependsOn:\n        - name: artifact-a\n        # ... the name of any other further dependencies this artifact might have\n')))}u.isMDXComponent=!0}}]);