(self.webpackChunkprofiles_dev=self.webpackChunkprofiles_dev||[]).push([[6897],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},p=Object.keys(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),i=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=i(e.components);return n.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,p=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),f=i(r),d=o,m=f["".concat(l,".").concat(d)]||f[d]||s[d]||p;return r?n.createElement(m,c(c({ref:t},u),{},{components:r})):n.createElement(m,c({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var p=r.length,c=new Array(p);c[0]=f;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var i=2;i<p;i++)c[i]=r[i];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},5961:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return i},toc:function(){return u},default:function(){return f}});var n=r(2122),o=r(9756),p=(r(7294),r(3905)),c=["components"],a={},l="prepare",i={unversionedId:"pctl/pctl-prepare-cmd",id:"pctl/pctl-prepare-cmd",isDocsHomePage:!1,title:"prepare",description:"`",source:"@site/docs/pctl/pctl-prepare-cmd.md",sourceDirName:"pctl",slug:"/pctl/pctl-prepare-cmd",permalink:"/docs/pctl/pctl-prepare-cmd",editUrl:"https://github.com/weaveworks/profiles/edit/main/userdocs/profiles.dev/docs/pctl/pctl-prepare-cmd.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"list",permalink:"/docs/pctl/pctl-list-cmd"},next:{title:"search",permalink:"/docs/pctl/pctl-search-cmd"}},u=[],s={toc:u};function f(e){var t=e.components,r=(0,o.Z)(e,c);return(0,p.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"prepare"},"prepare"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"NAME:\n   pctl prepare - prepares the cluster for profiles by deploying the profile controllers and custom resource definitions\n\nUSAGE:\n   pctl prepare\n\nOPTIONS:\n   --dry-run                  If defined, nothing will be applied. (default: false)\n   --keep                     Keep the downloaded manifest files. (default: false)\n   --ignore-preflight-errors  Instead of stopping the process, output warnings when they occur during preflight check. (default: false)\n   --version value            Define the tagged version to use which can be found under releases in the profiles repository. Exp: [v]0.0.1\n   --baseurl value            Define the url to go and fetch releases from. (default: https://github.com/weaveworks/profiles/releases)\n   --flux-namespace value     Define the namespace in which flux is installed. (default: flux-system)\n   --out value                Specify the output location of the downloaded prepare file. (default: os.Temp)\n   --context value            The Kubernetes context to use to apply the manifest files .\n   \n")))}f.isMDXComponent=!0}}]);